{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const tbody = document.querySelector('tbody');\n  let activeRow = null;\n  let editingCell = null;\n\n  // eslint-disable-next-line no-shadow\n  function addRow(name, position, office, age, salary) {\n    const tr = document.createElement('tr');\n\n    tr.insertCell().textContent = name;\n    tr.insertCell().textContent = position;\n    tr.insertCell().textContent = office;\n    tr.insertCell().textContent = age;\n    tr.insertCell().textContent = salary;\n\n    tr.addEventListener('click', () => highlightRow(tr));\n    Array.from(tr.children).forEach((cell) => editFunction(cell));\n\n    return tr;\n  }\n\n  function highlightRow(row) {\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n    row.classList.add('active');\n    activeRow = row;\n  }\n\n  function parseTable() {\n    const rows = document.querySelectorAll('table tbody tr');\n\n    return Array.from(rows).map((row) => {\n      const cells = row.querySelectorAll('td');\n\n      return {\n        name: cells[0].textContent.trim(),\n        position: cells[1].textContent.trim(),\n        office: cells[2].textContent.trim(),\n        age: cells[3].textContent.trim(),\n        salary: cells[4].textContent.trim(),\n      };\n    });\n  }\n\n  function renderTable(items) {\n    for (const row of items) {\n      tbody.append(\n        addRow(row.name, row.position, row.office, row.age, row.salary),\n      );\n    }\n  }\n\n  function sortRowsOnClick() {\n    const parseCurrency = (value) => {\n      return parseFloat(value.replace(/[^0-9.-]+/g, '')) || 0;\n    };\n\n    const sortState = {};\n\n    const sortTable = (columnIndex, isNumeric, ascending) => {\n      const table = document.querySelector('table');\n      const tableBody = table.querySelector('tbody');\n      const rows = Array.from(tableBody.querySelectorAll('tr'));\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.children[columnIndex].textContent.trim();\n        const cellB = rowB.children[columnIndex].textContent.trim();\n\n        let comparison;\n\n        if (isNumeric) {\n          comparison = parseCurrency(cellA) - parseCurrency(cellB);\n        } else {\n          comparison = cellA.localeCompare(cellB);\n        }\n\n        return ascending ? -comparison : comparison;\n      });\n\n      rows.forEach((row) => tableBody.appendChild(row));\n    };\n\n    const ths = document.querySelectorAll('thead th');\n\n    ths.forEach((th, index) => {\n      sortState[index] = 'asc';\n\n      th.addEventListener('click', () => {\n        const headerText = th.textContent.trim();\n        const isNumeric = headerText === 'Salary' || headerText === 'Age';\n        const currentSortState = sortState[index];\n        const newSortState = currentSortState === 'asc' ? 'desc' : 'asc';\n\n        sortState[index] = newSortState;\n\n        sortTable(index, isNumeric, newSortState === 'asc');\n\n        th.classList.toggle('asc', newSortState === 'asc');\n        th.classList.toggle('desc', newSortState === 'desc');\n      });\n    });\n  }\n\n  function createModal() {\n    const modalOverlay = document.createElement('div');\n\n    modalOverlay.className = 'modal-overlay';\n\n    const modal = document.createElement('div');\n\n    modal.className = 'modal';\n\n    modal.innerHTML = `\n      <form class=\"new-employee-form\">\n        <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n        <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n        <label>Office:\n          <select name=\"office\" data-qa=\"office\">\n            <option value=\"Tokyo\">Tokyo</option>\n            <option value=\"Singapore\">Singapore</option>\n            <option value=\"London\">London</option>\n            <option value=\"New York\">New York</option>\n            <option value=\"Edinburgh\">Edinburgh</option>\n            <option value=\"San Francisco\">San Francisco</option>\n          </select>\n        </label>\n        <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n        <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n        <button type=\"button\" id=\"save-button\">Save to table</button>\n      </form>\n  `;\n\n    modalOverlay.appendChild(modal);\n    document.body.appendChild(modalOverlay);\n\n    document\n      .getElementById('save-button')\n      .addEventListener('click', saveButton);\n  }\n\n  function saveButton() {\n    const form = document.querySelector('.new-employee-form');\n    const formData = new FormData(form);\n\n    // eslint-disable-next-line no-shadow\n    const name = formData.get('name');\n    const position = formData.get('position');\n    const office = formData.get('office');\n    const age = parseInt(formData.get('age'), 10);\n    const salary = parseFloat(formData.get('salary')).toFixed(2);\n\n    if (validForm(name, position, office, age, salary)) {\n      tbody.appendChild(\n        addRow(\n          name,\n          position,\n          office,\n          age,\n          `$${parseInt(salary).toLocaleString('en-US')}`,\n        ),\n      );\n\n      showNotification('Employee successfully added.', 'success');\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function validForm(name, position, office, age, salary) {\n    let isValid = true;\n\n    if (name.length >= 1 && name.length < 4) {\n      showNotification('Name must be at least 4 characters long.', 'error');\n      isValid = false;\n    }\n\n    if (age < 18 || age > 90) {\n      showNotification('Age must be between 18 and 90.', 'error');\n      isValid = false;\n    }\n\n    if (!name.trim() || !position.trim() || !office || !age || !salary) {\n      showNotification('All fields are required.', 'error');\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  function showNotification(message, type) {\n    const notification = document.createElement('div');\n\n    notification.className = `notification ${type}`;\n    notification.setAttribute('data-qa', 'notification');\n    notification.innerHTML = `<span class=\"title\">${type.toUpperCase()}</span> ${message}`;\n\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      notification.remove();\n    }, 3000);\n  }\n\n  function editFunction(cell) {\n    cell.addEventListener('dblclick', () => {\n      if (editingCell) {\n        saveEdit(editingCell);\n      }\n\n      if (editingCell !== cell) {\n        startEdit(cell);\n        editingCell = cell;\n      }\n    });\n  }\n\n  function startEdit(cell) {\n    const originalText = cell.textContent.trim();\n\n    cell.textContent = '';\n\n    const input = document.createElement('input');\n\n    input.className = 'cell-input';\n    input.value = originalText;\n\n    cell.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => saveEdit(cell));\n\n    input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        saveEdit(cell);\n      } else if (e.key === 'Escape') {\n        cancelEdit(cell, originalText);\n      }\n    });\n  }\n\n  function saveEdit(cell) {\n    const input = cell.querySelector('input');\n\n    if (input) {\n      const newValue = input.value.trim();\n\n      cell.textContent = newValue === '' ? input.defaultValue : newValue;\n      editingCell = null;\n    }\n  }\n\n  function cancelEdit(cell, originalText) {\n    cell.textContent = originalText;\n    editingCell = null;\n  }\n\n  function init() {\n    createModal();\n    sortRowsOnClick();\n\n    const tableContent = parseTable();\n\n    tbody.innerHTML = '';\n    renderTable(tableContent);\n  }\n\n  init();\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}